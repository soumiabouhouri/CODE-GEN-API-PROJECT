/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Account;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-06-07T13:28:51.174Z[GMT]")
@Api(value = "Accounts", description = "the Accounts API")
public interface AccountsApi {

    @ApiOperation(value = "Create  a new account", nickname = "addAccount", notes = "Adds an account in the system", tags={ "Accounts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Account created"),
        @ApiResponse(code = 400, message = "invalid input, object invalid"),
        @ApiResponse(code = 409, message = "This Account already exists") })
    @RequestMapping(value = "/Accounts",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addAccount(@ApiParam(value = "Account to add"  )  @Valid @RequestBody Account body
);


    @ApiOperation(value = "get the specific account", nickname = "getAccountByIBAN", notes = "", response = Account.class, tags={ "Accounts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "the articles", response = Account.class),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/Accounts/{IBAN}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Account> getAccountByIBAN(@ApiParam(value = "IBAN of the account to return",required=true) @PathVariable("IBAN") String IBAN
);


    @ApiOperation(value = "get all the accounts", nickname = "getAccouts", notes = "this will allow you to get all the accounts ", response = Account.class, responseContainer = "List", tags={ "Accounts", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "all the accounts", response = Account.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "bad input parameter") })
    @RequestMapping(value = "/Accounts",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Account>> getAccouts();

}
